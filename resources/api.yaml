apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: lrs
    component: api
  name: api
spec:
  replicas: 1
  selector:
    app: lrs
    deploymentconfig: api
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app: lrs
        component: api
        deploymentconfig: api
    spec:
      containers:
      - env:
        - name: NPM_RUN
          value: "start-api-server"
        - name: NODE_ENV
          value: "production"
        - name: UI_PORT
          value: "3000"
        - name: API_PORT
          value: "8080"
        - name: MONGODB_PATH
          valueFrom:
            configMapKeyRef:
              key: mongodb-path
              name: app-config
        - name: APP_SECRET
          valueFrom:
            configMapKeyRef:
              key: app-secret
              name: app-config
        - name: QUEUE_PROVIDER
          value: "REDIS"
        - name: FS_REPO
          value: "local"
        - name: REDIS_HOST
          value: "redis.learning-locker-dev.svc.cluster.local"
        - name: REDIS_DB
          value: "0"
        - name: SMTP_HOST
          valueFrom:
            configMapKeyRef:
              key: smtp-host
              name: app-config
        - name: SMTP_PORT
          valueFrom:
            configMapKeyRef:
              key: smtp-port
              name: app-config
        - name: SMTP_SECURED
          valueFrom:
            configMapKeyRef:
              key: smtp-secured
              name: app-config
        - name: SMTP_USER
          valueFrom:
            configMapKeyRef:
              key: smtp-user
              name: app-config
        - name: SMTP_PASS
          valueFrom:
            configMapKeyRef:
              key: smtp-pass
              name: app-config
        image: learning-locker:latest
        name: api
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /opt/app-root/src/learninglocker/storage 
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: storage
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - api
      from:
        kind: ImageStreamTag
        name: learning-locker:latest
    type: ImageChange
  - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lrs
    component: api
  name: api
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deploymentconfig: api
