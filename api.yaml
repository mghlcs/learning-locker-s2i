apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    application: lrs
    component: api
  name: api
spec:
  replicas: 1
  selector:
    deploymentconfig: api
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        application: lrs
        component: api
        deploymentconfig: api
    spec:
      containers:
      - command:
        - /bin/sh
        - -ic
        - node
        - api/dist/server
        env:
        - name: NODE_ENV
          value: "production"
        - name: UI_PORT
          value: "3000"
        - name: API_PORT
          value: "8080"
        - name: MONGODB_PATH
          value: "mongodb://mongodb:27017/learninglocker_v2"
        - name: SMTP_HOST
          value: "smtp.mailtrap.io"
        - name: SMTP_PORT
          value: "2525"
        - name: SMTP_SECURED
          value: "true"
        - name: SMTP_USER
          value: "dc8368f54c05fa"
        - name: SMTP_PASS
          value: "07d4bf8a26ebd5"
        - name: QUEUE_PROVIDER
          value: "REDIS"
        - name: FS_REPO
          value: "local"
        - name: REDIS_HOST
          value: "redis"
        - name: APP_SECRET
          value: "oximaw873ynrxc98w74ynxqo8we47mqv0984emq90348um203948mc20r9384u0mr9834mr"
        image: learning-locker:latest          
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 25
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/app-root/src/learninglocker/storage 
          name: storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: storage
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - api
      from:
        kind: ImageStreamTag
        name: learning-locker:latest
    type: ImageChange
  - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: lrs
    component: api
  name: api
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deploymentconfig: api
  sessionAffinity: None
  type: ClusterIP
